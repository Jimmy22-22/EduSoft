@page "/"
@using EduSoft.Services
@using EduSoft.Data

@inject AuthService AuthService
@inject NavigationManager Navigation

@if (isLoading)
{
    <div class="body2"></div>
}

else
{
    <div class="login-container">
        <div class="login-box">
            <h2><i class="fas fa-user-graduate"></i> Bienvenido a EduSoft</h2>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <p class="error-message"><i class="fas fa-exclamation-circle"></i> @ErrorMessage</p>
            }

            <div class="input-group">
                <label for="email"><i class="fas fa-envelope"></i> Email:</label>
                <input type="email" id="email" @bind="Email" class="input-field" placeholder="Ingresa tu email" />
            </div>

            <div class="input-group">
                <label for="password"><i class="fas fa-lock"></i> Contraseña:</label>
                <input type="password" id="password" @bind="Password" class="input-field" placeholder="Ingresa tu contraseña" />
            </div>

            <button @onclick="PerformLogin" class="btn-login">
                <i class="fas fa-sign-in-alt"></i> Iniciar Sesión
            </button>

            <p class="register-link">
                ¿No tienes una cuenta? <a href="javascript:void(0);" @onclick="IrARegistro"><i class="fas fa-user-plus"></i> Regístrate aquí</a>
            </p>
        </div>
    </div>
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background: linear-gradient(135deg, #e2f4ff, #95d6ff);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }
    .body2 {
        background: #ffffff;
        width: 100vw;
        height: 100vh;
    }

    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
    }

    .login-box {
        background: #F1F8FF;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        text-align: center;
        max-width: 400px;
        width: 100%;
        animation: fadeIn 0.8s ease-in-out;
    }

        .login-box h2 {
            color: #2C5282;
            margin-bottom: 20px;
            font-size: 1.8rem;
        }

    .error-message {
        color: #E53E3E;
        background: rgba(229, 62, 62, 0.1);
        padding: 10px;
        border-radius: 8px;
        margin-bottom: 15px;
        font-size: 0.9rem;
    }
    .input-group {
        text-align: left;
        margin-bottom: 15px;
    }

        .input-group label {
            font-weight: bold;
            color: #2C5282;
            font-size: 0.9rem;
        }

    .input-field {
        width: 100%;
        padding: 10px;
        margin-top: 5px;
        border: 1px solid #63B3ED;
        border-radius: 8px;
        font-size: 1rem;
        background: #EDF2F7;
        color: #2C5282;
        transition: border-color 0.3s;
    }

        .input-field:focus {
            border-color: #4299E1;
            outline: none;
        }

    .btn-login {
        background: #3182CE;
        color: white;
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        width: 100%;
        transition: background 0.3s, transform 0.2s;
    }

        .btn-login:hover {
            background: #2B6CB0;
            transform: scale(1.05);
        }
    .register-link {
        margin-top: 15px;
        font-size: 0.9rem;
        color: #2C5282;
    }

        .register-link a {
            color: #3182CE;
            text-decoration: none;
            font-weight: bold;
        }

            .register-link a:hover {
                text-decoration: underline;
            }

    @@keyframes fadeIn {
        from
    {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
    }
</style>

@code {
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ErrorMessage { get; set; } = string.Empty;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var usuario = await AuthService.VerificarSesion();
        if (usuario != null)
        {
            RedirigirSegunRol(usuario);
            return;
        }

        isLoading = false;
        StateHasChanged();
    }
    private async Task PerformLogin()
    {
        var usuario = await AuthService.Login(Email, Password);

        if (usuario != null)
        {
            RedirigirSegunRol(usuario);
        }
        else
        {
            ErrorMessage = "❌ Credenciales incorrectas. Inténtalo de nuevo.";
        }
    }
    private void RedirigirSegunRol(Usuario usuario)
    {
        if (usuario.Rol == RolUsuario.Estudiante)
            Navigation.NavigateTo("/dashboard-estudiante", true);
        else if (usuario.Rol == RolUsuario.Maestro)
            Navigation.NavigateTo("/dashboard-maestro", true);
    }

    private void IrARegistro()
    {
        Navigation.NavigateTo("/register");
    }
}
