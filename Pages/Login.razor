@page "/"
@using EduSoft.Services
@using EduSoft.Data
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Iniciar Sesión</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-danger">@ErrorMessage</p>
}

<div class="form-group">
    <label>Email:</label>
    <input type="email" @bind="Email" class="form-control" />
</div>

<div class="form-group">
    <label>Contraseña:</label>
    <input type="password" @bind="Password" class="form-control" />
</div>

<button @onclick="PerformLogin" class="btn btn-primary">Iniciar Sesión</button>

<p class="mt-3">
    ¿No tienes una cuenta? <a href="javascript:void(0);" @onclick="IrARegistro">Regístrate aquí</a>
</p>

@code {
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ErrorMessage { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var usuario = await AuthService.VerificarSesion(1); 
        if (usuario != null)
        {
            RedirigirSegunRol(usuario);
        }
    }

    private async Task PerformLogin()
    {
        var usuario = await AuthService.Login(Email, Password);

        if (usuario != null)
        {
            RedirigirSegunRol(usuario);
        }
        else
        {
            ErrorMessage = "❌ Credenciales incorrectas. Inténtalo de nuevo.";
        }
    }

    private void RedirigirSegunRol(Usuario usuario)
    {
        if (usuario.Rol == RolUsuario.Estudiante)
            Navigation.NavigateTo("/dashboard-estudiante", true);
        else if (usuario.Rol == RolUsuario.Maestro)
            Navigation.NavigateTo("/dashboard-maestro", true);
    }

    private void IrARegistro()
    {
        Navigation.NavigateTo("/register");
    }
}
