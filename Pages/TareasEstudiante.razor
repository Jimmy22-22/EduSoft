@page "/tareas-estudiante"
@layout LayoutEstudiante
@using EduSoft.Data
@using EduSoft.Services
@inject AuthService AuthService
@inject ClaseService ClaseService
@inject NavigationManager Navigation

<div class="tareas-wrapper">
    <h2 class="titulo-tareas">
        <i class="fas fa-tasks"></i> Mis Tareas
    </h2>

    @if (UsuarioAutenticado == null)
    {
        <div class="mensaje-box">
            <i class="fas fa-user-lock"></i>
            <p>Inicia sesión para ver tus tareas.</p>
        </div>
    }
    else if (TareasPorClase.Count == 0)
    {
        <div class="mensaje-box">
            <i class="fas fa-calendar-times"></i>
            <p>No tienes tareas asignadas actualmente.</p>
        </div>
    }
    else
    {
        <div class="grid-clases">
            @foreach (var item in TareasPorClase.Select((grupo, i) => (grupo, i)))
            {
                var color = Colores[item.i % Colores.Length];

                <div class="clase-card" style="border-left: 6px solid @color.Color;">
                    <div class="clase-header" style="color: @color.Color;">
                        <i class="@color.Icono"></i>
                        <h3>@item.grupo.Key</h3>
                    </div>

                    @foreach (var tarea in item.grupo.Value)
                    {
                        <div class="tarea-card">
                            <div class="tarea-info">
                                <h4>
                                    @tarea.Titulo
                                    @if (tarea.EsExamen)
                                    {
                                        <span class="badge-examen">Examen</span>
                                    }
                                </h4>
                                <p>@tarea.Descripcion</p>
                                <p><i class="fas fa-calendar-alt"></i> Entrega: <strong>@tarea.FechaEntrega.ToString("dd MMM yyyy")</strong></p>
                            </div>
                            <div class="tarea-acciones">
                                <button class="btn-ver" @onclick="@(() => IrADetalle(tarea.Id))">
                                    <i class="fas fa-eye"></i> Ver Detalle
                                </button>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

<style>
    .tareas-wrapper {
        max-width: 1200px;
        margin: 0 auto;
        padding: 30px 20px;
    }

    .titulo-tareas {
        text-align: center;
        font-size: 2rem;
        background: linear-gradient(135deg, #64b5f6, #2196f3);
        color: white;
        padding: 15px;
        border-radius: 12px;
        margin-bottom: 30px;
        box-shadow: 0 6px 12px rgba(0,0,0,0.1);
    }

    .mensaje-box {
        text-align: center;
        padding: 30px;
        background: #f3f4f6;
        color: #555;
        border-radius: 12px;
        font-size: 1.1rem;
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
    }

        .mensaje-box i {
            font-size: 2rem;
            margin-bottom: 10px;
            color: #999;
        }

    .grid-clases {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
        gap: 25px;
    }

    .clase-card {
        background: #ffffff;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 6px 12px rgba(0,0,0,0.06);
    }

    .clase-header {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 1.3rem;
        margin-bottom: 15px;
    }

        .clase-header i {
            font-size: 1.5rem;
        }

    .tarea-card {
        background: #f7faff;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
        transition: transform 0.2s ease;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px;
    }

        .tarea-card:hover {
            transform: scale(1.01);
        }

    .tarea-info {
        flex: 1;
    }

        .tarea-info h4 {
            margin: 0;
            font-size: 1.1rem;
            color: #2c3e50;
        }

        .tarea-info p {
            font-size: 0.95rem;
            color: #555;
            margin: 5px 0;
        }

    .badge-examen {
        background: #ef5350;
        color: white;
        padding: 4px 10px;
        font-size: 0.75rem;
        border-radius: 12px;
        margin-left: 10px;
        font-weight: 600;
    }

    .tarea-acciones .btn-ver {
        background: #1976d2;
        color: white;
        border: none;
        padding: 10px 16px;
        border-radius: 8px;
        font-size: 0.9rem;
        cursor: pointer;
        transition: background 0.3s ease;
    }

        .tarea-acciones .btn-ver:hover {
            background: #0d47a1;
        }
</style>

@code {
    private Usuario? UsuarioAutenticado;
    private Dictionary<string, List<Tarea>> TareasPorClase = new();

    private (string Icono, string Color)[] Colores = new[]
    {
        ("fas fa-book", "#42a5f5"),
        ("fas fa-pencil-alt", "#66bb6a"),
        ("fas fa-laptop-code", "#ffa726"),
        ("fas fa-brain", "#ab47bc"),
        ("fas fa-flask", "#26c6da"),
        ("fas fa-scroll", "#ba68c8")
    };

    protected override async Task OnInitializedAsync()
    {
        UsuarioAutenticado = await AuthService.VerificarSesion();

        if (UsuarioAutenticado != null)
        {
            var clases = await ClaseService.GetClasesPorEstudianteAsync(UsuarioAutenticado.Id);

            foreach (var clase in clases)
            {
                var tareas = await ClaseService.GetTareasPorClaseAsync(clase.Id);
                var soloTareas = tareas
                    .Where(t => !t.EsExamen)
                    .OrderBy(t => t.FechaEntrega)
                    .ToList();

                if (soloTareas.Count > 0)
                {
                    TareasPorClase[clase.Nombre] = soloTareas;
                }
            }
        }
    }

    private void IrADetalle(int tareaId)
    {
        Navigation.NavigateTo($"/tarea-detalle-estudiante/{tareaId}");
    }
}
