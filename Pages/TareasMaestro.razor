@page "/tareas-maestro"
@using EduSoft.Data
@using EduSoft.Services
@inject ClaseService ClaseService
@layout LayoutMaestro

<h2 class="titulo-principal"><i class="fas fa-tasks"></i> Gestión de Tareas</h2>

<div class="selector-clase">
    <label for="claseSelect">Selecciona una clase:</label>
    <select id="claseSelect" class="form-select" @onchange="OnClaseChanged">
        <option value="">-- Seleccionar --</option>
        @foreach (var clase in Clases)
        {
            <option value="@clase.Id">@clase.Nombre</option>
        }
    </select>
</div>

@if (Tareas != null && Tareas.Any())
{
    <div class="tarjetas-tareas">
        @foreach (var tarea in Tareas)
        {
            <div class="tarjeta-tarea">
                <div class="tarjeta-header">
                    <i class="fas fa-book"></i> @tarea.Titulo
                    <span class="fecha-entrega"><i class="fas fa-calendar-day"></i> @tarea.FechaEntrega.ToString("dd MMM yyyy")</span>
                </div>
                <div class="tarjeta-footer">
                    <button class="btn-ver" @onclick="() => VerEntregas(tarea.Id)">
                        <i class="fas fa-folder-open"></i> Ver Entregas
                    </button>
                </div>
            </div>
        }
    </div>
}
else if (ClaseSeleccionadaId != null)
{
    <p class="sin-tareas">No hay tareas disponibles para esta clase.</p>
}

@if (MostrarEntregas && Entregas != null)
{
    <h3 class="subtitulo">Entregas de la Tarea</h3>
    <table class="tabla-entregas">
        <thead>
            <tr>
                <th><i class="fas fa-user"></i> Estudiante</th>
                <th><i class="fas fa-star"></i> Calificación</th>
                <th><i class="fas fa-cog"></i> Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entrega in Entregas)
            {
                <tr>
                    <td>@entrega.Usuario.Nombre</td>
                    <td>
                        <input type="number" @bind="entrega.Nota" min="0" max="100" class="nota-input" />
                    </td>
                    <td>
                        <button class="btn-guardar" @onclick="() => CalificarEntrega(entrega)">
                            <i class="fas fa-save"></i> Guardar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<style>

    .titulo-principal {
        text-align: center;
        color: #2e7d32; 
        margin-bottom: 30px;
    }

    .selector-clase {
        max-width: 400px;
        margin: auto;
        margin-bottom: 30px;
    }

        .selector-clase label {
            font-weight: 600;
            display: block;
            margin-bottom: 6px;
            color: black;
        }


    .form-select {
        width: 100%;
        padding: 10px 14px;
        border: 1.5px solid black;
        border-radius: 10px;
        font-size: 1rem;
        color: black;
        background-color: white !important;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        transition: border-color 0.3s ease, background-color 0.3s ease;
        cursor: pointer;
    }

        .form-select:hover,
        .form-select:focus {
            border-color: #1b5e20; 
            outline: none;
            background-color: #f0f0f0;
        }

    /* Tarjetas */
    .tarjetas-tareas {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
    }

    .tarjeta-tarea {
        background: #c8e6c9; 
        border-radius: 12px;
        box-shadow: 0 3px 8px rgba(0,0,0,0.1);
        width: 300px;
        padding: 15px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .tarjeta-header {
        font-weight: 600;
        font-size: 1.1rem;
        color: #2e7d32; 
        margin-bottom: 10px;
    }

    .fecha-entrega {
        display: block;
        font-size: 0.9rem;
        color: #555;
        margin-top: 8px;
    }

    .tarjeta-footer {
        text-align: right;
    }


    .btn-ver {
        background: #388e3c; 
        color: white;
        border: none;
        padding: 8px 14px;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn-ver:hover {
            background: #2e7d32;
        }


    .subtitulo {
        text-align: center;
        margin-top: 40px;
        margin-bottom: 20px;
        color: #333;
    }


    .tabla-entregas {
        width: 100%;
        max-width: 900px;
        margin: auto;
        border-collapse: collapse;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        background-color: white;
        border: 1.5px solid black;
        border-radius: 10px;
        overflow: hidden;
    }

        .tabla-entregas th, .tabla-entregas td {
            border-bottom: 1.5px solid black;
            padding: 12px;
            text-align: center;
            color: black;
        }

        .tabla-entregas th {
            background-color: #c8e6c9; 
            font-weight: 700;
            border-bottom: 2px solid #2e7d32; 
        }

        .tabla-entregas tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .tabla-entregas tbody tr:hover {
            background-color: #dcedc8; 
            cursor: default;
        }



    .nota-input {
        width: 80px;
        padding: 5px;
        border-radius: 6px;
        text-align: center;
        border: 1.5px solid black;
        color: black;
        background-color: white;
        transition: border-color 0.3s ease;
    }

        .nota-input:focus {
            border-color: #2e7d32;
            outline: none;
            background-color: #f9fff9;
        }


    .btn-guardar {
        background: #43a047; 
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn-guardar:hover {
            background: #2e7d32;
        }


    .sin-tareas {
        text-align: center;
        font-style: italic;
        color: #999;
        margin-top: 20px;
    }
</style>

@code {
    private List<Clase> Clases = new();
    private List<Tarea> Tareas = new();
    private List<EntregaTareaEstudiante> Entregas = new();
    private int? ClaseSeleccionadaId;
    private bool MostrarEntregas = false;

    protected override async Task OnInitializedAsync()
    {
        Clases = await ClaseService.ObtenerClasesAsync();
    }

    private async Task OnClaseChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int claseId))
        {
            ClaseSeleccionadaId = claseId;
            Tareas = await ClaseService.ObtenerTareasPorClaseSinExamenAsync(claseId);
            Entregas = null;
            MostrarEntregas = false;
        }
    }

    private async Task VerEntregas(int tareaId)
    {
        Entregas = await ClaseService.ObtenerEntregasPorTareaAsync(tareaId);
        MostrarEntregas = true;
    }

    private async Task CalificarEntrega(EntregaTareaEstudiante entrega)
    {
        await ClaseService.ActualizarNotaAsync(entrega);
    }
}
