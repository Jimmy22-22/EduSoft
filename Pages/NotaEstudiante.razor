@page "/notas-estudiante"
@using EduSoft.Data
@using EduSoft.Services
@layout LayoutEstudiante
@inject AuthService AuthService
@inject ClaseService ClaseService

<h2 class="titulo"><i class="fas fa-star-half-alt"></i> Mis Calificaciones</h2>

@if (NotasPorClase.Count == 0)
{
    <p class="no-data">No hay calificaciones registradas.</p>
}
else
{
    @foreach (var claseNotas in NotasPorClase)
    {
        <div class="clase-card">
            <h3><i class="fas fa-book-open"></i> @claseNotas.NombreClase</h3>
            <table class="tabla-notas">
                <thead>
                    <tr>
                        <th>Tarea</th>
                        <th>Nota</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var nota in claseNotas.Notas)
                    {
                        <tr>
                            <td>@nota.TituloTarea</td>
                            <td>
                                @if (nota.Nota.HasValue)
                                {
                                    <span class="badge-nota">@nota.Nota.Value</span>
                                }
                                else
                                {
                                    <span class="badge-pendiente">Pendiente</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

<style>
    .titulo {
        text-align: center;
        color: #0052D4;
        margin-bottom: 30px;
    }

    .clase-card {
        background: #f5f8fd;
        padding: 20px;
        margin-bottom: 25px;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
    }

        .clase-card h3 {
            color: #2c3e50;
            margin-bottom: 15px;
        }

    .tabla-notas {
        width: 100%;
        border-collapse: collapse;
    }

        .tabla-notas th, .tabla-notas td {
            padding: 10px;
            border: 1px solid #ccc;
            text-align: left;
        }

        .tabla-notas th {
            background-color: #e0e7ff;
            color: #2c3e50;
        }

    .badge-nota {
        background: #2ecc71;
        color: white;
        padding: 5px 10px;
        border-radius: 6px;
        font-weight: bold;
    }

    .badge-pendiente {
        background: #e67e22;
        color: white;
        padding: 5px 10px;
        border-radius: 6px;
        font-weight: bold;
    }

    .no-data {
        text-align: center;
        font-style: italic;
        color: #777;
    }
</style>

@code {
    private Usuario? UsuarioAutenticado;
    private List<NotasClaseDto> NotasPorClase = new();

    protected override async Task OnInitializedAsync()
    {
        UsuarioAutenticado = await AuthService.VerificarSesion();

        if (UsuarioAutenticado != null)
        {
            NotasPorClase = await ClaseService.ObtenerNotasPorEstudianteAsync(UsuarioAutenticado.Id);
        }
    }

    public class NotasClaseDto
    {
        public string NombreClase { get; set; } = "";
        public List<NotaTareaDto> Notas { get; set; } = new();
    }
}
