@page "/asistencias-estudiante"
@layout LayoutEstudiante
@using EduSoft.Data
@using EduSoft.Services
@inject AuthService AuthService
@inject AsistenciaService AsistenciaService
@inject NavigationManager Navigation

<div class="asistencias-contenedor">
    <h2 class="asistencias-titulo"><i class="fas fa-calendar-check"></i> Registro de Asistencias</h2>

    @if (AsistenciasAgrupadas.Count == 0)
    {
        <div class="no-asistencias-box">
            <i class="fas fa-calendar-times icono-noasistencias"></i>
            <p>No se encontraron asistencias registradas.</p>
        </div>
    }
    else
    {
        @foreach (var grupo in AsistenciasAgrupadas)
        {
            <div class="asistencia-card">
                <div class="asistencia-encabezado">
                    <i class="fas fa-book"></i>
                    <span>@grupo.Key</span>
                </div>
                <ul class="asistencia-lista">
                    @foreach (var registro in grupo.Value.OrderByDescending(a => a.Fecha))
                    {
                        <li class="asistencia-item">
                            <span class="fecha">
                                <i class="fas fa-calendar-day"></i>
                                @registro.Fecha.ToString("dd MMM yyyy")
                            </span>
                            <span class="badge @(registro.Asistio ? "presente" : "ausente")">
                                <i class="fas @(registro.Asistio ? "fa-check-circle" : "fa-times-circle")"></i>
                                @(registro.Asistio ? "Presente" : "Ausente")
                            </span>
                        </li>
                    }
                </ul>
            </div>
        }
    }
</div>

<style>
    .asistencias-contenedor {
        max-width: 1000px;
        margin: 0 auto;
        padding: 30px 20px;
    }

    .asistencias-titulo {
        font-size: 2rem;
        text-align: center;
        margin-bottom: 40px;
        color: white;
        background: linear-gradient(135deg, #42a5f5, #1e88e5);
        padding: 15px;
        border-radius: 12px;
        box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
    }

    .no-asistencias-box {
        background: #fff3f3;
        color: #d32f2f;
        text-align: center;
        padding: 25px;
        border-radius: 12px;
        font-size: 1.1rem;
        box-shadow: 0 4px 8px rgba(0,0,0,0.05);
    }

    .icono-noasistencias {
        font-size: 2rem;
        margin-bottom: 10px;
    }

    .asistencia-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 6px 10px rgba(0, 0, 0, 0.06);
        margin-bottom: 30px;
        padding: 20px;
        border-left: 6px solid #42a5f5;
        transition: transform 0.3s ease;
    }

        .asistencia-card:hover {
            transform: translateY(-3px);
        }

    .asistencia-encabezado {
        font-size: 1.4rem;
        font-weight: 600;
        color: #1e88e5;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
        background: #f0f8ff;
        padding: 10px 15px;
        border-radius: 8px;
    }

    .asistencia-lista {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .asistencia-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 16px;
        margin-bottom: 10px;
        background: #f9fbfd;
        border-radius: 8px;
        border: 1px solid #e3edf8;
        font-size: 0.95rem;
        transition: background 0.3s ease;
    }

        .asistencia-item:hover {
            background: #e8f4ff;
        }

    .fecha {
        color: #34495e;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .badge {
        display: flex;
        align-items: center;
        gap: 6px;
        font-weight: bold;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }

        .badge.presente {
            background: #e0f7ea;
            color: #2e7d32;
        }

        .badge.ausente {
            background: #ffebee;
            color: #c62828;
        }
</style>

@code {
    private Usuario? UsuarioAutenticado;
    private Dictionary<string, List<AsistenciaEstudiante>> AsistenciasAgrupadas = new();

    protected override async Task OnInitializedAsync()
    {
        UsuarioAutenticado = await AuthService.VerificarSesion();
        if (UsuarioAutenticado != null)
        {
            var asistencias = await AsistenciaService.GetAsistenciasPorEstudianteAsync(UsuarioAutenticado.Id);
            AsistenciasAgrupadas = asistencias
                .GroupBy(a => a.Clase.Nombre)
                .ToDictionary(g => g.Key, g => g.ToList());
        }
        else
        {
            Navigation.NavigateTo("/");
        }
    }
}
