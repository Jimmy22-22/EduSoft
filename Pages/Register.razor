@page "/register"
@using EduSoft.Services
@using EduSoft.Data

@inject AuthService AuthService
@inject NavigationManager Navigation

@using System.Text.RegularExpressions;

<div class="register-container">
    <div class="register-box">
        <h2><i class="fas fa-user-plus"></i> Crear Cuenta</h2>

        @if (!string.IsNullOrEmpty(SuccessMessage))
        {
            <p class="success-message"><i class="fas fa-check-circle"></i> @SuccessMessage</p>
        }
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p class="error-message"><i class="fas fa-exclamation-circle"></i> @ErrorMessage</p>
        }

        <div class="input-group">
            <label for="nombre"><i class="fas fa-user"></i> Nombre:</label>
            <input type="text" id="nombre" @bind="Nombre" class="input-field" placeholder="Ingresa tu nombre" tabindex="1" />
        </div>

        <div class="input-group">
            <label for="email"><i class="fas fa-envelope"></i> Email:</label>
            <input type="email" id="email" @bind="Email" class="input-field" placeholder="Ingresa tu email" tabindex="2" />
        </div>

        <div class="input-group">
            <label for="password"><i class="fas fa-lock"></i> Contraseña:</label>
            <input type="password" id="password" @bind="Password" class="input-field" placeholder="Crea una contraseña" tabindex="3" />
        </div>

        <div class="input-group">
            <label for="rol"><i class="fas fa-user-tag"></i> Rol:</label>
            <select id="rol" @bind="Rol" class="input-field" tabindex="4">
                <option value="@RolUsuario.Estudiante">Estudiante</option>
                <option value="@RolUsuario.Maestro">Maestro</option>
            </select>
        </div>

        <button @onclick="PerformRegister" class="btn-register" tabindex="5">
            <i class="@(IsLoading ? "fas fa-spinner fa-spin" : "fas fa-user-check")"></i>
            @(IsLoading ? " Registrando..." : " Registrar")
        </button>

        <p class="login-link">
            ¿Ya tienes una cuenta?
            <a href="/" class="btn-login-link" tabindex="6">
                <i class="fas fa-sign-in-alt"></i> Iniciar Sesión
            </a>
        </p>
    </div>
</div>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background: linear-gradient(135deg, #e2f4ff, #95d6ff);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }

    .register-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
    }

    .register-box {
        background: #E3F2FD;
        padding: 35px;
        border-radius: 20px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        text-align: center;
        max-width: 420px;
        width: 100%;
        animation: fadeIn 0.8s ease-in-out;
    }

        .register-box h2 {
            color: #1565C0;
            margin-bottom: 25px;
            font-size: 1.9rem;
            font-weight: 700;
        }

    .input-group {
        text-align: left;
        margin-bottom: 18px;
    }

        .input-group label {
            font-weight: 600;
            color: #0D47A1;
            font-size: 0.95rem;
            margin-left: 5px;
        }

    .input-field {
        width: 100%;
        padding: 12px;
        margin-top: 6px;
        border: 2px solid #90CAF9;
        border-radius: 14px;
        font-size: 1rem;
        background: #EAF4FE;
        color: #0D47A1;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .input-field:focus {
            border-color: #42A5F5;
            outline: none;
            box-shadow: 0 0 6px rgba(66, 165, 245, 0.3);
        }

    .btn-register {
        background: #1E88E5;
        color: white;
        border: none;
        padding: 14px;
        border-radius: 16px;
        font-size: 1rem;
        font-weight: bold;
        cursor: pointer;
        width: 100%;
        margin-top: 20px;
        transition: all 0.3s ease;
    }

        .btn-register:hover {
            background: #1565C0;
            transform: scale(1.04);
            box-shadow: 0 4px 10px rgba(21, 101, 192, 0.2);
        }

    .login-link {
        margin-top: 18px;
        font-size: 0.9rem;
        color: #0D47A1;
    }

        .login-link a {
            color: #1E88E5;
            text-decoration: none;
            font-weight: 600;
            margin-left: 4px;
        }

            .login-link a:hover {
                text-decoration: underline;
            }

    .success-message {
        color: #2E7D32;
        background: rgba(46, 125, 50, 0.1);
        padding: 12px;
        border-radius: 12px;
        margin-bottom: 18px;
        font-size: 0.95rem;
    }

    .error-message {
        color: #C62828;
        background: rgba(198, 40, 40, 0.1);
        padding: 12px;
        border-radius: 12px;
        margin-bottom: 18px;
        font-size: 0.95rem;
    }

    .input-field:focus,
    .btn-register:focus,
    a:focus {
        outline: 2px solid #64B5F6;
        box-shadow: 0 0 8px rgba(100, 181, 246, 0.5);
        border-radius: 14px;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

@code {
    private string Nombre { get; set; } = string.Empty;
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private RolUsuario Rol { get; set; } = RolUsuario.Estudiante;

    private string SuccessMessage { get; set; } = string.Empty;
    private string ErrorMessage { get; set; } = string.Empty;
    private bool IsLoading { get; set; } = false;

    private async Task PerformRegister()
    {
        if (IsLoading) return;
        IsLoading = true;

        SuccessMessage = string.Empty;
        ErrorMessage = string.Empty;

        if (!EsEmailValido(Email))
        {
            ErrorMessage = "El correo ingresado no es válido.";
            IsLoading = false;
            return;
        }

        if (Password.Length < 8)
        {
            ErrorMessage = "La contraseña debe tener al menos 8 caracteres.";
            IsLoading = false;
            return;
        }

        if (!char.IsUpper(Password[0]))
        {
            ErrorMessage = "La contraseña debe comenzar con una letra mayúscula.";
            IsLoading = false;
            return;
        }

        if (!Password.Any(char.IsDigit))
        {
            ErrorMessage = "La contraseña debe contener al menos un número.";
            IsLoading = false;
            return;
        }

        var result = await AuthService.RegisterUser(Nombre, Email, Password, Rol);

        if (result)
        {
            SuccessMessage = "Usuario registrado con éxito.";
            await Task.Delay(100);
            Navigation.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "El email ya está en uso.";
        }

        IsLoading = false;
    }

    private bool EsEmailValido(string email)
    {
        return Regex.IsMatch(email, @"^[^@\s]+@[^@\s]+\.[^@\s]+$");
    }
}
