@page "/dashboard-estudiante"

@layout LayoutEstudiante
@using EduSoft.Data
@using EduSoft.Services
@inject AuthService AuthService
@inject DashboardEstudianteService DashboardEstudianteService
@inject NavigationManager Navigation


<div class="dashboard-container">
    <h2 class="dashboard-title">
        <i class="fas fa-user-graduate"></i> Bienvenido, @UsuarioAutenticado?.Nombre
    </h2>

    <div class="class-list-container">
        <h3 class="class-list-title"><i class="fas fa-book-open"></i> Clases Inscritas</h3>
        @if (Clases.Count > 0)
        {
            <div class="class-grid">
                @foreach (var clase in Clases.Select((valor, indice) => (valor, indice)))
                {
                    // usamos múltiplos de 10 para mantener orden flexible
                    <div class="class-card"
                         tabindex="@((clase.indice + 1) * 10)"
                         @onclick="() => IrAClase(clase.valor.Id)">
                        <div class="class-header">
                            <h4><i class="fas fa-chalkboard"></i> @clase.valor.Nombre</h4>
                        </div>
                        <div class="class-body">
                            <p><i class="fas fa-user-tie"></i> Profesor: @clase.valor.Profesor</p>
                            <button class="btn-details" tabindex="-1">Ver Detalles <i class="fas fa-arrow-right"></i></button>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="no-classes"><i class="fas fa-exclamation-circle"></i> No estás inscrito en ninguna clase.</p>
        }
    </div>
</div>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background: linear-gradient(135deg, #d9f3ff, #a2dcff);
        margin: 0;
        padding: 20px;
    }

    .main-content {
        background: #f0fbff;
        padding: 25px;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }


    .dashboard-title {
        color: #0077cc;
        font-size: 1.8rem;
        margin-bottom: 20px;
    }

    .class-list-container {
        margin-top: 20px;
    }

    .class-list-title {
        color: #0088dd;
        font-size: 1.5rem;
        margin-bottom: 15px;
    }

    .class-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 15px;
    }

    .class-card {
        background: #e3f4ff;
        border-radius: 10px;
        padding: 15px;
        box-shadow: 2px 4px 8px rgba(0, 0, 0, 0.1);
        cursor: pointer;
        transition: transform 0.2s, background 0.3s;
    }

        .class-card:hover {
            transform: scale(1.05);
            background: #d1edff;
        }

    .class-header {
        font-size: 1.2rem;
        font-weight: bold;
        color: #0088cc;
        margin-bottom: 10px;
    }

    .class-body p {
        font-size: 0.9rem;
        color: #005a99;
    }


    .btn-details {
        display: block;
        margin-top: 10px;
        background: #0099ee;
        color: white;
        padding: 8px;
        border: none;
        border-radius: 6px;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.3s;
    }

        .btn-details:hover {
            background: #007acc;
        }

    .no-classes {
        font-size: 1rem;
        color: #4b6a88;
    }

    .class-card:focus {
        outline: 2px solid #007acc;
        background: #cdefff;
        transform: scale(1.03);
    }
</style>

@code {
    private Usuario? UsuarioAutenticado;
    private List<Clase> Clases = new();

    
    protected override async Task OnInitializedAsync()
    {
        var usuario = await AuthService.VerificarSesion();
        if (usuario != null)
        {
            UsuarioAutenticado = usuario;
            Clases = await DashboardEstudianteService.GetClasesPorEstudianteAsync(usuario.Id);
        }
        else
        {
            Navigation.NavigateTo("/");
        }
    }


    private void IrAClase(int claseId) => Navigation.NavigateTo($"/clase-estudiante/{claseId}");
}
