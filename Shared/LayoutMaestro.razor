@inherits LayoutComponentBase
@using EduSoft.Data
@using EduSoft.Services
@inject AuthService AuthService
@inject DashboardMaestroService DashboardMaestroService
@inject NavigationManager Navigation

<div class="layout-container">
    <header class="top-bar">
        <h2>EduSoft - Gestión de Clases</h2>

        <div class="center-ai-button">
            <button class="btn-ai" @onclick="IrIA" tabindex="99">
                <i class="fas fa-brain"></i> EDU AI
            </button>
        </div>

        <div class="top-buttons">
            <button class="btn-action notification-btn" @onclick="ToggleNotificaciones" tabindex="0">
                <i class="fas fa-bell"></i>
                @if (MostrarBadge && Notificaciones.Count > 0)
                {
                    <span class="badge">@Notificaciones.Count</span>
                }
            </button>
            <button class="btn-action toggle-sidebar-btn" @onclick="ToggleSidebar" tabindex="1">
                <i class="fas fa-bars"></i>
            </button>
            <button class="btn-action btn-home" @onclick="IrDashboardMaestro" tabindex="2">
                <i class="fas fa-home"></i>
            </button>
            <button class="btn-action btn-logout" @onclick="CerrarSesion" tabindex="3">
                <i class="fas fa-sign-out-alt"></i>
            </button>
        </div>
    </header>

    @if (MostrarNotificaciones)
    {
        <div class="notification-panel">
            <h4><i class="fas fa-bell"></i> Notificaciones</h4>
            @if (Notificaciones.Count == 0)
            {
                <p class="empty-msg"><i class="fas fa-inbox"></i> No tienes notificaciones nuevas.</p>
            }
            else
            {
                <ul class="notification-list">
                    @foreach (var noti in Notificaciones)
                    {
                        <li class="noti-bubble"><i class="fas fa-check-circle"></i> @noti</li>
                    }
                </ul>
            }
        </div>
    }

    <nav class="sub-nav">
        <div class="nav-item" @onclick="IrHorarios" tabindex="4">
            <i class="fas fa-calendar-alt"></i>
            <span>Horarios</span>
        </div>
        <div class="nav-item" @onclick="IrNotas" tabindex="5">
            <i class="fas fa-file-alt"></i>
            <span>Notas</span>
        </div>
        <div class="nav-item" @onclick="IrAsistencia" tabindex="6">
            <i class="fas fa-user-check"></i>
            <span>Asistencia</span>
        </div>
        <div class="nav-item" @onclick="IrTareas" tabindex="7">
            <i class="fas fa-tasks"></i>
            <span>Tareas</span>
        </div>
        <div class="nav-item" @onclick="IrExamenes" tabindex="8">
            <i class="fas fa-clipboard-list"></i>
            <span>Exámenes</span>
        </div>
    </nav>

    <div class="content-container">
        <main class="main-content">
            @Body
        </main>

        @if (MostrarSidebar)
        {
            <aside class="sidebar @(SidebarAnimado ? "animated" : "")">
                <h4><i class="fas fa-chalkboard"></i> Clases Creadas</h4>
                <button class="btn-add-class" @onclick="AbrirModal" tabindex="9">
                    <i class="fas fa-plus"></i> Crear Clase
                </button>
                <ul class="course-list">
                    @foreach (var clase in Clases.Select((valor, i) => (valor, i)))
                    {
                        <li class="course-item">
                            <a href="javascript:void(0);" @onclick="() => IrAClase(clase.valor.Id)" tabindex="@((clase.i + 10) * 10)">
                                <i class="fas fa-chalkboard-teacher"></i> @clase.valor.Nombre
                            </a>
                        </li>
                    }
                </ul>
            </aside>
        }
    </div>
</div>

@if (MostrarModal)
{
    <div class="modal-overlay">
        <div class="modal-box">
            <h2>Crear Nueva Clase</h2>
            <div class="modal-content">
                <input type="text" @bind="NuevaClaseNombre" class="modal-input" placeholder="Nombre de la Clase" tabindex="100" />
                <div class="modal-actions">
                    <button @onclick="CrearClase" class="modal-button confirm" tabindex="101">
                        <i class="fas fa-check"></i> Crear
                    </button>
                    <button @onclick="CerrarModal" class="modal-button cancel" tabindex="102">
                        <i class="fas fa-times"></i> Cancelar
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .sub-nav {
        display: flex;
        justify-content: center;
        gap: 40px;
        padding: 15px;
        background: linear-gradient(135deg, #16A085, #1ABC9C);
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
        border-bottom-left-radius: 20px;
        border-bottom-right-radius: 20px;
    }

    .nav-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        cursor: pointer;
        color: white;
        font-size: 1rem;
        transition: transform 0.2s, color 0.3s;
    }

        .nav-item i {
            font-size: 1.5rem;
            margin-bottom: 5px;
        }

        .nav-item:hover {
            transform: scale(1.1);
            color: #FFD700;
        }

    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f7f6;
        margin: 0;
        padding: 0;
    }

    .layout-container {
        display: flex;
        flex-direction: column;
        height: 100vh;
    }

    .top-bar {
        background: linear-gradient(135deg, #2ECC71, #1ABC9C);
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        font-size: 1.4rem;
        font-weight: bold;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        border-bottom: 1px solid #0E8F57; 
    }

    .top-buttons {
        display: flex;
        gap: 10px;
    }

    .btn-action {
        background: none;
        border: none;
        color: white;
        font-size: 1.4rem;
        cursor: pointer;
        transition: transform 0.2s ease, color 0.3s;
    }

    .toggle-sidebar-btn:hover {
        color: #FFD700;
    }

    .btn-home:hover {
        color: #FFA500;
    }

    .btn-logout:hover {
        color: #FF4D4D;
    }

    .content-container {
        display: flex;
        flex: 1;
        padding: 20px;
        gap: 20px;
    }

    .main-content {
        flex: 3;
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .sidebar {
        flex: 1;
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .animated {
        opacity: 0;
        transform: scale(0.9);
        animation: fadeIn 0.3s ease-in-out forwards;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: scale(0.9);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .sidebar h4 {
        color: #E67E22;
        font-size: 1.2rem;
        margin-bottom: 15px;
    }

    .btn-add-class {
        background: #E67E22;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        width: 100%;
        transition: background 0.3s, transform 0.2s;
    }

        .btn-add-class:hover {
            background: #D35400;
            transform: scale(1.05);
        }

    .course-list {
        list-style: none;
        padding: 0;
        margin-top: 15px;
    }

    .course-item {
        background: #F9E79F;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 8px;
        transition: background 0.3s ease, transform 0.2s ease;
    }

        .course-item a {
            text-decoration: none;
            color: #E67E22;
            font-weight: bold;
            display: block;
        }

        .course-item:hover {
            background: #F4D03F;
            transform: scale(1.05);
        }

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-box {
        background: white;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        width: 350px;
        text-align: center;
    }

    .modal-content {
        margin-top: 15px;
    }

    .modal-input {
        width: 100%;
        padding: 10px;
        border-radius: 8px;
        border: 1px solid #ccc;
        font-size: 1rem;
    }

    .modal-actions {
        margin-top: 20px;
        display: flex;
        justify-content: space-between;
    }

    .modal-button {
        border: none;
        padding: 10px 15px;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        width: 48%;
        transition: background 0.3s, transform 0.2s;
    }

    .confirm {
        background: #16A085;
        color: white;
    }

        .confirm:hover {
            background: #138D75;
            transform: scale(1.05);
        }

    .cancel {
        background: #E74C3C;
        color: white;
    }

        .cancel:hover {
            background: #C0392B;
            transform: scale(1.05);
        }

    .center-ai-button {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
    }

    .btn-ai {
        background: #F39C12;
        color: white;
        font-weight: bold;
        padding: 10px 18px;
        border: none;
        border-radius: 10px;
        font-size: 1rem;
        cursor: pointer;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        transition: background 0.3s, transform 0.2s;
    }

        .btn-ai:hover {
            background: #D68910;
            transform: scale(1.05);
        }

    .notification-btn {
        position: relative;
    }

    .badge {
        position: absolute;
        top: -4px;
        right: -6px;
        background: #E74C3C;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.75rem;
    }

    .notification-panel {
        position: absolute;
        top: 70px;
        right: 20px;
        background: #ffffff;
        color: #333;
        padding: 15px;
        border-radius: 10px;
        width: 320px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 1001;
    }

        .notification-panel h4 {
            margin-top: 0;
            color: #27AE60;
            font-size: 1.2rem;
            margin-bottom: 10px;
        }

    .notification-list {
        list-style: none;
        padding-left: 0;
        max-height: 300px;
        overflow-y: auto;
    }

    .noti-bubble {
        background: #E9F7EF;
        color: #117A65;
        padding: 10px;
        border-radius: 12px;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        font-size: 0.95rem;
        gap: 6px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }

    .empty-msg {
        font-size: 0.9rem;
        color: #888;
        text-align: center;
    }
</style>

@code {
    private Usuario? UsuarioAutenticado;
    private List<Clase> Clases = new();
    private bool MostrarSidebar = true;
    private bool MostrarModal = false;
    private bool SidebarAnimado = false;
    private string NuevaClaseNombre = "";
    private bool MostrarNotificaciones = false;
    private bool MostrarBadge = true;
    private List<string> Notificaciones = new();

    private void ToggleNotificaciones()
    {
        MostrarNotificaciones = !MostrarNotificaciones;

        if (MostrarNotificaciones)
            MostrarBadge = false;
    }

    private void IrDashboardMaestro() => Navigation.NavigateTo("/dashboard-maestro");
    private void IrHorarios() => Navigation.NavigateTo("/horarios-maestro");
    private void IrNotas() => Navigation.NavigateTo("/notas-maestro");
    private void IrAsistencia() => Navigation.NavigateTo("/asistencia-maestro");
    private void IrTareas() => Navigation.NavigateTo("/tareas-maestro");
    private void IrExamenes() => Navigation.NavigateTo("/examenes-maestro");
    private async Task CerrarSesion()
    {
        await AuthService.EliminarSesion(UsuarioAutenticado.Id);
        UsuarioAutenticado = null;
        Navigation.NavigateTo("/", true);
    }
    protected override async Task OnInitializedAsync()
    {
        await CargarDatos();
        if (UsuarioAutenticado != null)
        {
            Notificaciones = await DashboardMaestroService.ObtenerNotificacionesMaestroAsync(UsuarioAutenticado.Nombre);
            MostrarBadge = Notificaciones.Count > 0;
        }
    }

    private async Task CargarDatos()
    {
        UsuarioAutenticado = await AuthService.VerificarSesion();
        if (UsuarioAutenticado != null)
        {
            Clases = await DashboardMaestroService.GetClasesPorProfesorAsync(UsuarioAutenticado.Nombre);
            StateHasChanged();
        }
    }
    private void IrAClase(int claseId)
    {
        Navigation.NavigateTo($"/clase-maestro/{claseId}");
    }

    private async Task CrearClase()
    {
        if (!string.IsNullOrWhiteSpace(NuevaClaseNombre))
        {
            await DashboardMaestroService.CrearClaseAsync(NuevaClaseNombre, UsuarioAutenticado.Nombre);
            NuevaClaseNombre = "";
            MostrarModal = false;

            Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
        }
    }

    private void AbrirModal()
    {
        NuevaClaseNombre = "";
        MostrarModal = true;
        StateHasChanged();
    }
    private void CerrarModal() { MostrarModal = false; StateHasChanged(); }
    private void ToggleSidebar() { MostrarSidebar = !MostrarSidebar; }

    private void IrIA() => Navigation.NavigateTo("/eduaimaestro");
}
