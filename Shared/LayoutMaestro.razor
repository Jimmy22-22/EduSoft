@inherits LayoutComponentBase
@using EduSoft.Data
@using EduSoft.Services
@inject AuthService AuthService
@inject DashboardMaestroService DashboardMaestroService
@inject NavigationManager Navigation

<div class="layout-container">
    <header class="top-bar">
        <h2>EduSoft - Gestión de Clases</h2>

        <div class="center-ai-button">
            <button class="btn-ai" @onclick="IrIA" tabindex="99">
                <i class="fas fa-brain"></i> EDU AI
            </button>
        </div>

        <div class="top-buttons">
            <button class="btn-action notification-btn" @onclick="ToggleNotificaciones" tabindex="0">
                <i class="fas fa-bell"></i>
                @if (MostrarBadge && Notificaciones.Count > 0)
                {
                    <span class="badge">@Notificaciones.Count</span>
                }
            </button>
            <button class="btn-action toggle-sidebar-btn" @onclick="ToggleSidebar" tabindex="1">
                <i class="fas fa-bars"></i>
            </button>
            <button class="btn-action btn-home" @onclick="IrDashboardMaestro" tabindex="2">
                <i class="fas fa-home"></i>
            </button>
            <button class="btn-action btn-logout" @onclick="CerrarSesion" tabindex="3">
                <i class="fas fa-sign-out-alt"></i>
            </button>
        </div>
    </header>

    @if (MostrarNotificaciones)
    {
        <div class="notification-panel">
            <h4><i class="fas fa-bell"></i> Notificaciones</h4>
            @if (Notificaciones.Count == 0)
            {
                <p class="empty-msg"><i class="fas fa-inbox"></i> No tienes notificaciones nuevas.</p>
            }
            else
            {
                <ul class="notification-list">
                    @foreach (var noti in Notificaciones)
                    {
                        <li class="noti-bubble"><i class="fas fa-check-circle"></i> @noti</li>
                    }
                </ul>
            }
        </div>
    }

    <nav class="sub-nav">
        <div class="nav-item" @onclick="IrHorarios" tabindex="4"><i class="fas fa-calendar-alt"></i><span>Horarios</span></div>
        <div class="nav-item" @onclick="IrNotas" tabindex="5"><i class="fas fa-file-alt"></i><span>Notas</span></div>
        <div class="nav-item" @onclick="IrAsistencia" tabindex="6"><i class="fas fa-user-check"></i><span>Asistencia</span></div>
        <div class="nav-item" @onclick="IrTareas" tabindex="7"><i class="fas fa-tasks"></i><span>Tareas</span></div>
        <div class="nav-item" @onclick="IrExamenes" tabindex="8"><i class="fas fa-clipboard-list"></i><span>Exámenes</span></div>
    </nav>

    <div class="content-container">
        <main class="main-content">@Body</main>

        @if (MostrarSidebar)
        {
            <aside class="sidebar @(SidebarAnimado ? "animated" : "")">
                <div class="sidebar-header">
                    <h4 class="sidebar-title"><i class="fas fa-chalkboard"></i> Mis Clases</h4>
                    <div class="search-wrapper">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" @bind="FiltroBusquedaClase" class="search-box" placeholder="Buscar clase..." />
                    </div>
                </div>
                <button class="btn-add-class" @onclick="AbrirModal" tabindex="9">
                    <i class="fas fa-plus"></i> Crear Clase
                </button>
                <ul class="course-list">
                    @foreach (var clase in ClasesFiltradas.Select((valor, i) => (valor, i)))
                    {
                        var colorClase = ObtenerClaseColorPorIndice(clase.i);
                        <li class="course-item @colorClase">
                            <a href="javascript:void(0);" @onclick="() => IrAClase(clase.valor.Id)" tabindex="@((clase.i + 10) * 10)">
                                <i class="fas fa-chalkboard-teacher"></i> @clase.valor.Nombre
                            </a>
                        </li>
                    }
                </ul>
            </aside>
        }
    </div>
</div>

@if (MostrarModal)
{
    <div class="modal-overlay">
        <div class="modal-box enhanced">
            <div class="modal-header">
                <i class="fas fa-plus-circle modal-icon"></i>
                <h2>Crear Nueva Clase</h2>
            </div>
            <p class="modal-subtitle">Define el nombre de la clase que deseas crear.</p>
            <input type="text" @bind="NuevaClaseNombre" class="modal-input enhanced-input" placeholder="Ej. Matemática 2025" tabindex="100" />
            <div class="modal-actions">
                <button @onclick="CrearClase" class="modal-button confirm enhanced-btn" tabindex="101">
                    <i class="fas fa-check-circle"></i> Crear
                </button>
                <button @onclick="CerrarModal" class="modal-button cancel enhanced-btn" tabindex="102">
                    <i class="fas fa-times-circle"></i> Cancelar
                </button>
            </div>
        </div>
    </div>
}


<style>
    .sub-nav {
        display: flex;
        justify-content: center;
        gap: 40px;
        padding: 15px;
        background: linear-gradient(135deg, #2d91ff, #50a3ff);
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
        border-bottom-left-radius: 20px;
        border-bottom-right-radius: 20px;
    }

    .nav-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        cursor: pointer;
        color: white;
        font-size: 1rem;
        transition: transform 0.2s, color 0.3s;
    }

        .nav-item i {
            font-size: 1.5rem;
            margin-bottom: 5px;
        }

        .nav-item:hover {
            transform: scale(1.1);
            color: #d4e6ff;
        }

    body {
        font-family: 'Arial', sans-serif;
        background-color: #f5f9ff;
        margin: 0;
        padding: 0;
    }

    .layout-container {
        display: flex;
        flex-direction: column;
        height: 100vh;
    }

    .top-bar {
        background: linear-gradient(135deg, #1e60d8, #2c72e9);
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        font-size: 1.4rem;
        font-weight: bold;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-bottom: 1px solid #2a92c5;
    }

    .top-buttons {
        display: flex;
        gap: 10px;
    }

    .btn-action {
        background: none;
        border: none;
        color: white;
        font-size: 1.4rem;
        cursor: pointer;
        transition: transform 0.2s ease, color 0.3s;
    }

    .toggle-sidebar-btn:hover {
        color: #d4e6ff;
    }

    .btn-home:hover {
        color: #a0d1ff;
    }

    .btn-logout:hover {
        color: #ffb4b4;
    }

    .content-container {
        display: flex;
        flex: 1;
        padding: 20px;
        gap: 20px;
        background-color: #f0f7ff;
    }

    .main-content {
        flex: 3;
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        border: 1px solid #e1f0ff;
    }

    .sidebar {
        flex: 1;
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        text-align: center;
        border: 1px solid #e1f0ff;
    }

    .animated {
        opacity: 0;
        transform: scale(0.9);
        animation: fadeIn 0.3s ease-in-out forwards;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: scale(0.9);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .sidebar h4 {
        color: #4a89dc;
        font-size: 1.2rem;
        margin-bottom: 15px;
    }

    .btn-add-class {
        background: #4a89dc;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        width: 100%;
        transition: background 0.3s, transform 0.2s;
    }

        .btn-add-class:hover {
            background: #3b72c1;
            transform: scale(1.05);
        }

    .course-list {
        list-style: none;
        padding: 0;
        margin-top: 15px;
    }

    .course-item {
        background: #e8f4ff;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 8px;
        transition: background 0.3s ease, transform 0.2s ease;
    }

        .course-item a {
            text-decoration: none;
            color: #4a89dc;
            font-weight: bold;
            display: block;
        }

        .course-item:hover {
            background: #d4e6ff;
            transform: scale(1.05);
        }

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-box {
        background: white;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        width: 350px;
        text-align: center;
    }

    .modal-content {
        margin-top: 15px;
    }

    .modal-input {
        width: 100%;
        padding: 10px;
        border-radius: 8px;
        border: 1px solid #ccc;
        font-size: 1rem;
    }

    .modal-actions {
        margin-top: 20px;
        display: flex;
        justify-content: space-between;
    }

    .modal-button {
        border: none;
        padding: 10px 15px;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        width: 48%;
        transition: background 0.3s, transform 0.2s;
    }

    .confirm {
        background: #4CAF50 !important;
        color: white;
    }

        .confirm:hover {
            background: #73ff79;
            transform: scale(1.05);
        }

    .cancel {
        background: #ed5565;
        color: white;
    }

        .cancel:hover {
            background: #da4453;
            transform: scale(1.05);
        }

    .center-ai-button {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
    }

    .btn-ai {
        background: #5d9cec;
        color: white;
        font-weight: bold;
        padding: 10px 18px;
        border: none;
        border-radius: 10px;
        font-size: 1rem;
        cursor: pointer;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: background 0.3s, transform 0.2s;
    }

        .btn-ai:hover {
            background: #4a89dc;
            transform: scale(1.05);
        }

    .notification-btn {
        position: relative;
    }

    .badge {
        position: absolute;
        top: -4px;
        right: -6px;
        background: #ed5565;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.75rem;
    }

    .notification-panel {
        position: absolute;
        top: 70px;
        right: 20px;
        background: #FFFFFF; /* Blanco puro */
        color: #2E3A59; /* Azul grisáceo sobrio */
        padding: 15px;
        border-radius: 10px;
        width: 320px;
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.08);
        z-index: 1001;
        border: 1px solid #E0E0E0; /* Borde gris claro neutro */
        backdrop-filter: blur(3px); /* Sutileza de vidrio */
    }


        .notification-panel h4 {
            margin-top: 0;
            color: #2E3A59; /* Azul grisáceo elegante */
            font-size: 1.2rem;
            margin-bottom: 10px;
        }


    .notification-list {
        list-style: none;
        padding-left: 0;
        max-height: 300px;
        overflow-y: auto;
    }

    .noti-bubble {
        background: #dcf0ff; /* Azul muy claro, casi blanco */
        color: #2E3A59; /* Azul sobrio para el texto */
        padding: 10px;
        border-radius: 12px;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        font-size: 0.95rem;
        gap: 6px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        transition: background-color 0.3s ease;
    }

        .noti-bubble:hover {
            background: #b4dfff; /* Azul pastel al hacer hover */
        }

        .noti-bubble i {
            color: #81C784; /* Ícono verde menta */
        }

    .badge {
        position: absolute;
        top: -4px;
        right: -6px;
        background: #FF6F61; /* Rojo coral suave */
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.75rem;
    }


    .empty-msg {
        font-size: 0.9rem;
        color: #888;
        text-align: center;
    }

    .modal-box.enhanced {
        width: 420px;
        padding: 35px 25px;
        text-align: center;
        border-radius: 20px;
        color: white;
        position: relative;
        animation: scaleIn 0.5s ease-out;
        background: linear-gradient(270deg, #a5d8ff, #4facfe, #5d9cec);
        background-size: 800% 800%;
        animation: gradientFlow 6s ease infinite;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2), inset 0 0 12px rgba(255, 255, 255, 0.1), 0 0 0 3px rgba(255, 255, 255, 0.08);
    }

    @@keyframes gradientFlow {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    .modal-header {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 15px;
    }

    .modal-icon {
        font-size: 2.5rem;
        color: #d4e6ff;
        animation: pulse 1s infinite alternate;
        margin-bottom: 10px;
    }

    .modal-subtitle {
        color: #e1f0ff;
        font-size: 1rem;
        margin-bottom: 20px;
    }

    .enhanced-input {
        font-size: 1.05rem;
        padding: 12px;
        border: 2px solid #a5d8ff;
        border-radius: 12px;
        transition: border 0.3s, box-shadow 0.3s;
        background-color: rgba(255, 255, 255, 0.9);
    }

        .enhanced-input:focus {
            border-color: #4facfe;
            box-shadow: 0 0 6px rgba(79, 172, 254, 0.4);
            outline: none;
        }

    .enhanced-btn {
        font-weight: bold;
        font-size: 1rem;
        padding: 12px 18px;
        border-radius: 12px;
        transition: transform 0.2s ease, background 0.3s ease;
    }

    .confirm.enhanced-btn {
        background: #4facfe;
    }

    .cancel.enhanced-btn {
        background: #ed5565;
    }

    .enhanced-btn:hover {
        transform: scale(1.05);
        filter: brightness(1.1);
        color: white;
    }

    @@keyframes scaleIn {
        from {
            transform: scale(0.8);
            opacity: 0;
        }

        to {
            transform: scale(1);
            opacity: 1;
        }
    }

    @@keyframes pulse {
        from {
            transform: scale(1);
        }

        to {
            transform: scale(1.1);
        }
    }

    .sidebar-header {
        margin-bottom: 15px;
        text-align: center;
    }

    .sidebar-title {
        font-size: 1.4rem;
        color: #4a89dc;
        margin-bottom: 10px;
    }

    .search-wrapper {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .search-icon {
        position: absolute;
        left: 14px;
        font-size: 1rem;
        color: #999;
    }

    .search-box {
        width: 100%;
        padding: 10px 12px 10px 36px;
        border-radius: 20px;
        border: 1px solid #ccc;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        background-color: #f8faff;
    }

        .search-box:focus {
            border-color: #4a89dc;
            outline: none;
            box-shadow: 0 0 8px rgba(74, 137, 220, 0.2);
            background-color: white;
        }

    /* Colores pastel para tarjetas del dashboard */
    .tarjeta-rojo {
        background: #ffebee;
        border-left: 6px solid #ef5350;
    }

    .tarjeta-naranja {
        background: #fff3e0;
        border-left: 6px solid #ffa726;
    }

    .tarjeta-amarillo {
        background: #fffde7;
        border-left: 6px solid #ffee58;
    }

    .tarjeta-verde {
        background: #e8f5e9;
        border-left: 6px solid #66bb6a;
    }

    .tarjeta-azul {
        background: #e3f2fd;
        border-left: 6px solid #42a5f5;
    }

    .tarjeta-celeste {
        background: #e0f7fa;
        border-left: 6px solid #26c6da;
    }

    .tarjeta-lila {
        background: #f3e5f5;
        border-left: 6px solid #ab47bc;
    }

    .tarjeta-rosada {
        background: #fce4ec;
        border-left: 6px solid #ec407a;
    }
</style>

@code {
    private Usuario? UsuarioAutenticado;
    private List<Clase> Clases = new();
    private string FiltroBusquedaClase = "";
    private bool MostrarSidebar = true;
    private bool MostrarModal = false;
    private bool SidebarAnimado = false;
    private string NuevaClaseNombre = "";
    private bool MostrarNotificaciones = false;
    private bool MostrarBadge = true;
    private List<string> Notificaciones = new();
    private Random random = new Random();

    private IEnumerable<Clase> ClasesFiltradas =>
        string.IsNullOrWhiteSpace(FiltroBusquedaClase)
            ? Clases
            : Clases.Where(c => c.Nombre.Contains(FiltroBusquedaClase, StringComparison.OrdinalIgnoreCase));

    private string ObtenerClaseColorPorIndice(int index)
{
    var colores = new List<string>
    {
        "tarjeta-rojo",
        "tarjeta-naranja",
        "tarjeta-amarillo",
        "tarjeta-verde",
        "tarjeta-azul",
        "tarjeta-celeste",
        "tarjeta-lila",
        "tarjeta-rosada"
    };
    return colores[index % colores.Count];
}

    private void ToggleNotificaciones()
    {
        MostrarNotificaciones = !MostrarNotificaciones;
        if (MostrarNotificaciones)
            MostrarBadge = false;
    }

    private void IrDashboardMaestro() => Navigation.NavigateTo("/dashboard-maestro");
    private void IrHorarios() => Navigation.NavigateTo("/horarios-maestro");
    private void IrNotas() => Navigation.NavigateTo("/notas-maestro");
    private void IrAsistencia() => Navigation.NavigateTo("/asistencia-maestro");
    private void IrTareas() => Navigation.NavigateTo("/tareas-maestro");
    private void IrExamenes() => Navigation.NavigateTo("/examenes-maestro");
    private void IrIA() => Navigation.NavigateTo("/eduaimaestro");

    private async Task CerrarSesion()
    {
        await AuthService.EliminarSesion(UsuarioAutenticado.Id);
        UsuarioAutenticado = null;
        Navigation.NavigateTo("/", true);
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarDatos();
        if (UsuarioAutenticado != null)
        {
            Notificaciones = await DashboardMaestroService.ObtenerNotificacionesMaestroAsync(UsuarioAutenticado.Nombre);
            MostrarBadge = Notificaciones.Count > 0;
        }
    }

    private async Task CargarDatos()
    {
        UsuarioAutenticado = await AuthService.VerificarSesion();
        if (UsuarioAutenticado != null)
        {
            Clases = await DashboardMaestroService.GetClasesPorProfesorAsync(UsuarioAutenticado.Nombre);
            StateHasChanged();
        }
    }

    private void IrAClase(int claseId)
    {
        Navigation.NavigateTo($"/clase-maestro/{claseId}", forceLoad: true);
    }

    private async Task CrearClase()
    {
        if (!string.IsNullOrWhiteSpace(NuevaClaseNombre))
        {
            await DashboardMaestroService.CrearClaseAsync(NuevaClaseNombre, UsuarioAutenticado.Nombre);
            NuevaClaseNombre = "";
            MostrarModal = false;
            Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
        }
    }

    private void AbrirModal()
    {
        NuevaClaseNombre = "";
        MostrarModal = true;
        StateHasChanged();
    }

    private void CerrarModal() => MostrarModal = false;
    private void ToggleSidebar() => MostrarSidebar = !MostrarSidebar;
}
